---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import readingTime from 'reading-time';

import RelativeTime from '../../ui/RelativeTime';

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  // console.log(blogEntries);

  return blogEntries.map((entry) => {
    // console.log(entry);
    return {
      params: { slug: entry.slug },
      props: { entry },
    };
  });
}

// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();

const { data } = entry;
// console.log(data);
const { title, created_at, updated_at } = data;

const createdAtFormatted = created_at.toLocaleDateString('en-UK', {
  day: 'numeric',
  month: 'short',
  year: 'numeric',
});
const readingTimeMinutes = Math.ceil(readingTime(entry.body).minutes);
---

<Layout title={title}>
  <article class='my-12 p-4 md:p-8 mx-auto shadow max-w-screen-lg'>
    <header class='border-b'>
      <div class='flex justify-between items-center'>
        <h1 class='capitalize'>{title}</h1>
        <span class='hidden md:block'>{readingTimeMinutes} mins read</span>
      </div>
      <div class='flex justify-between items-center'>
        <RelativeTime created_at={created_at} client:load />
        <span class='block md:hidden'>{readingTimeMinutes} mins read</span>
      </div>
    </header>
    <main class='pt-8 pb-4'>
      <Content />
    </main>
    <span class='mt-8'>
      Posted on {createdAtFormatted}
    </span>
  </article>
</Layout>

<style is:global>
  h1 {
    @apply mb-2;
  }
  h2 {
    @apply mt-6 mb-2;
  }
  h3,
  h4 {
    @apply mt-4 mb-2;
  }

  p {
    @apply text-base mb-2;
    line-height: 1.7;
  }
</style>
